import { useEffect } from "react";


const Arrow = (name) => {

    useEffect((count)=> {
        update
        fetch("some api").then().catch()

    }, 
    [remove])
    return (
        <div> I am also a functional component</div>

    )
} 

export default Arrow; 

Which one of the following is a Hook?
componentDidMount()
componentWillUnmount()
render()
useEffect()

Which one of the following lifecycle methods will run only once?
render()
componentDidMount()
constructor()
None of the above

Before Hooks, which component was known as a stateless component?
Class
Function
Object
None of the above


Which lifecycle method is mandatory for a class based component?
constructor()
static getDerivedStateFromProps()
render()
componentDidUpdate()


What decides how many times the callback in useEffect is going to be executed?
The callback
The place where itâ€™s declared
The array of dependencies
None of the above.
